<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>11.00</b4x_version>
  <dependsOn>javaobject</dependsOn>
  <dependsOn>phone</dependsOn>
  <dependsOn>reflection</dependsOn>
  <dependsOn>runtimepermissions</dependsOn>
  <dependsOn>androidneturi</dependsOn>
  <dependsOn>com.android.support:support-v4</dependsOn>
  <dependsOn>xui</dependsOn>
  <class>
    <name>com.uwebview.ultimatewebview._downloadproperties</name>
    <shortname>DownloadProperties</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Url</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>UserAgent</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>Cookies</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>FileName</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>FileExtension</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>ContentDisposition</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>MimeType</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>ContentLength</name>
      <returntype>long</returntype>
    </field>
    <field>
      <name>DownloadID</name>
      <returntype>long</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.ultimatewebview._httpauthrequestproperties</name>
    <shortname>HttpAuthRequestProperties</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Host</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>Realm</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.ultimatewebview._loginrequestproperties</name>
    <shortname>LoginRequestProperties</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Realm</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>Account</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>Args</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.ultimatewebview._jsproperties</name>
    <shortname>JsProperties</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Url</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>Message</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>DefaultValue</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.ultimatewebview</name>
    <shortname>UltimateWebView</shortname>
    <owner>activity</owner>
    <permission>android.permission.INTERNET</permission>
    <event>ConsoleMessage (ConsoleMessage1 As ConsoleMessage) As Boolean</event>
    <event>CreateChildWindow (IsDialog As Boolean, IsUserGesture As Boolean) As UltimateWebView</event>
    <event>ExecuteJavaScriptResult (Result As string)</event>
    <event>FileChooserInitialized (FilePathCallback As Object, FileChooserParams1 As FileChooserParams)</event>
    <event>FileDownloadInitialized (DownloadProperties1 As DownloadProperties)</event>
    <event>FileDownloadStarted (DownloadProperties1 As DownloadProperties)</event>
    <event>FileDownloadCompleted (Success As Boolean, DownloadProperties1 As DownloadProperties)</event>
    <event>JsAlert (JsProperties1 As JsProperties, JsResult1 As JsResult) As Boolean</event>
    <event>JsBeforeUnload (JsProperties1 As JsProperties, JsResult1 As JsResult) As Boolean</event>
    <event>JsConfirm (JsProperties1 As JsProperties, JsResult1 As JsResult) As Boolean</event>
    <event>LoadResource (Url As String)</event>
    <event>OverrideUrl (WebResourceRequest1 As WebResourceRequest) As Boolean</event>
    <event>OverrideUrlWithExternalAppIntent (WebResourceRequest1 As WebResourceRequest, ExternalAppIntent As Intent) As Boolean</event>
    <event>PageCommitVisible (Url As String)</event>
    <event>PageFinished (Url As String)</event>
    <event>PageStarted (Url As String, FavIcon As Bitmap)</event>
    <event>PermissionRequest (RequestedPermission As String)</event>
    <event>PageLoadingProgressChanged(Progress As Int)</event>
    <event>ReceivedHttpAuthRequest (HttpAuthHandler1 As HttpAuthHandler, HttpAuthRequestProperties1 As HttpAuthRequestProperties)</event>
    <event>ReceivedHttpError (WebResponseRequest1 As WebResourceRequest, WebResourceResponse1 As WebResourceResponse)</event>
    <event>ReceivedError (WebResourceRequest1 As WebResourceRequest, WebResourceError1 as WebResourceError)</event>
    <event>ReceivedIcon (Icon As Bitmap)</event>
    <event>ReceivedLoginRequest (LoginRequestProperties1 As LoginRequestProperties)</event>
    <event>ReceivedTitle (Title As String)</event>
    <event>RenderProcessGone (DidCrash As Boolean, RendererPriorityAtExit As Int)</event>
    <event>SafeBrowsingHit (WebResourceRequest1 As WebResourceRequest, SafeBrowsingResponse1 As SafeBrowsingResponse)</event>
    <event>ScaleChanged (OldScale As Float, NewScale As Float)</event>
    <event>ShouldInterceptRequest (Request As WebResourceRequest) As WebResourceResponse</event>
    <event>UpdateVisitedHistory (Url As String, IsReload As Boolean)</event>
    <designerProperty>Key: enableSlowWholeDocumentDraw, DisplayName: EnableSlowWholeDocumentDraw, FieldType: Boolean, DefaultValue: False, Description: For apps targeting the L release, WebView has a new default behavior that reduces memory footprint and increases performance by intelligently choosing the portion of the HTML document that needs to be drawn.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddJavascriptInterface">_addjavascriptinterface</name>
      <comment>Injects the supplied Java object into this UltimateWebView. The object is injected into all frames of the web page, including all the iframes, using the supplied name. This allows the Java object's methods to be accessed from JavaScript.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Javascript</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="BringToFront">_bringtofront</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="CanGoBack">_cangoback</name>
      <comment>Gets whether this UltimateWebView has a back history item.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="CanGoBackOrForward">_cangobackorforward</name>
      <comment>Gets whether the page can go back or forward the given number of steps.
Steps as Int (negative - back or positive - forward number of steps to move the history)
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Steps</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CanGoForward">_cangoforward</name>
      <comment>Gets whether this UltimateWebView has a forward history item.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="CaptureScreenshotToBitmap">_capturescreenshottobitmap</name>
      <comment>Capture UltimateWebView visible area to Bitmap.
</comment>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
    </method>
    <method>
      <name DesignerName="CaptureScreenshotToImageFile">_capturescreenshottoimagefile</name>
      <comment>Capture UltimateWebView visible area to Image File.
Permission WRITE_EXTERNAL_STORAGE required
ImageType: "jpeg" or "png" or "webp"
ImageQuality: 1 to 100
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>FilePath</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>FileNameWithExtension</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>ImageType</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>ImageQuality</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ClearCache">_clearcache</name>
      <comment>Clears the resource cache. Note that the cache is per-application, so this will clear the cache for all UltimateWebViews used.
IncludeDiskFiles As Boolean (if false, only the RAM cache is cleared)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>IncludeDiskFiles</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ClearFormData">_clearformdata</name>
      <comment>Removes the autocomplete popup from the currently focused form field, if present.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ClearHistory">_clearhistory</name>
      <comment>Tells this UltimateWebView to clear its internal back/forward list.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ClearMatches">_clearmatches</name>
      <comment>Clears the highlighting surrounding text matches created by findAllAsync(String).
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ClearSslPreferences">_clearsslpreferences</name>
      <comment>Clears the SSL preferences table stored in response to proceeding with SSL certificate errors.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ComputeScroll">_computescroll</name>
      <comment>Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Base</name>
        <type>anywheresoftware.b4a.objects.PanelWrapper</type>
      </parameter>
      <parameter>
        <name>Lbl</name>
        <type>anywheresoftware.b4a.objects.LabelWrapper</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="EnableSlowWholeDocumentDraw">_enableslowwholedocumentdraw</name>
      <comment>For apps targeting the L release, UltimateWebView has a new default behavior that reduces memory footprint and increases performance by intelligently choosing the portion of the HTML document that needs to be drawn. These optimizations are transparent to the developers.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ExecuteJavaScript">_executejavascript</name>
      <comment>Execute Javascript in UltimateWebView.
Important: UltimateWebView1.Settings.JavaScriptEnabled=True 'Must be set to True somewhere in code
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>JavaScript</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ExecuteJavaScript2">_executejavascript2</name>
      <comment>Execute Javascript in UltimateWebView and got asynchronius backward Result.
Event "ExecuteJavaScriptResult (Result as String)" will be fired when result is available. Result can be "null".
Example:
	UltimateWebView1.Settings.JavaScriptEnabled=True 'Must be set to True somewhere in code
	UltimateWebView1.ExecuteJavascript2([Your JavaScript Code])
	Wait For UltimateWebView1_ExecuteJavaScriptResult (Result As String)
	'Do your stuff with Result
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>JavaScript</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FileChooserStart">_filechooserstart</name>
      <comment>You can use this method to run FileChooser to upload a file. It is important that you use this method in the FileChooserInitialized event.
FilePathCallback and FileChooserParams1 are initialized by Event.
ForceIsCaptureEnabled As Boolean - True: Use resources such as camera, microphone, etc. by force if the required file format is appropriate. False: Use a predefined value assigned to FileChooserParams.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>FilePathCallback</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>FileChooserParams1</name>
        <type>com.uwebview.filechooserparams</type>
      </parameter>
      <parameter>
        <name>ForceIsCaptureEnabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FindAllAsync">_findallasync</name>
      <comment>Finds all instances of find on the page and highlights them, asynchronously.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Find</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FindNext">_findnext</name>
      <comment>Highlights and scrolls to the next match found by FindAllAsync(Find As String), wrapping around page boundaries as necessary.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Forward</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FlingScroll">_flingscroll</name>
      <returntype>String</returntype>
      <parameter>
        <name>X</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Y</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getAccessibilityClassName" HideFromIDE="true">_getaccessibilityclassname</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getConstants" HideFromIDE="true">_getconstants</name>
      <returntype>com.uwebview.ultimatewebviewconstants</returntype>
    </method>
    <method>
      <name DesignerName="getContentHeight" HideFromIDE="true">_getcontentheight</name>
      <comment>Gets the height in pixels of the HTML content.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getCookieManager" HideFromIDE="true">_getcookiemanager</name>
      <returntype>com.uwebview.ultimatecookiemanager</returntype>
    </method>
    <method>
      <name DesignerName="getCopyBackForwardList" HideFromIDE="true">_getcopybackforwardlist</name>
      <returntype>com.uwebview.webbackforwardlist</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getFavIcon" HideFromIDE="true">_getfavicon</name>
      <comment>Gets the favicon for the current page.
</comment>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getIsPrivateBrowsingEnabled" HideFromIDE="true">_getisprivatebrowsingenabled</name>
      <comment>Gets whether private browsing is enabled in this UltimateWebView.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getLeft" HideFromIDE="true">_getleft</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMimeTypeMap" HideFromIDE="true">_getmimetypemap</name>
      <comment>Gets or sets UltimateMimeTypeMap methods and properties. Class is auto initialized.
</comment>
      <returntype>com.uwebview.ultimatemimetypemap</returntype>
    </method>
    <method>
      <name DesignerName="getOnCheckIsTextEditor" HideFromIDE="true">_getoncheckistexteditor</name>
      <comment>Check whether the called view is a text editor, in which case it would make sense to automatically display a soft input window for it.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getOriginalUrl" HideFromIDE="true">_getoriginalurl</name>
      <comment>Gets the original URL for the current page.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getPadding" HideFromIDE="true">_getpadding</name>
      <returntype>int[]</returntype>
    </method>
    <method>
      <name DesignerName="getParent" HideFromIDE="true">_getparent</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getProgress" HideFromIDE="true">_getprogress</name>
      <comment>Gets the progress for the current page.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getSafeBrowsingPrivacyPolicyUrl" HideFromIDE="true">_getsafebrowsingprivacypolicyurl</name>
      <comment>Gets android.net.Uri as AndroidNetUri. Link for AndroidNetUri library and documentations:
https://www.b4x.com/android/forum/threads/androidneturi-library.136402/
</comment>
      <returntype>ba.uri.androidneturi</returntype>
    </method>
    <method>
      <name DesignerName="getSettings" HideFromIDE="true">_getsettings</name>
      <returntype>com.uwebview.ultimatewebviewsettings</returntype>
    </method>
    <method>
      <name DesignerName="getTag" HideFromIDE="true">_gettag</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getText" HideFromIDE="true">_gettext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTitle" HideFromIDE="true">_gettitle</name>
      <comment>Gets the title for the current page.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTop" HideFromIDE="true">_gettop</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getUrl" HideFromIDE="true">_geturl</name>
      <comment>Gets the URL for the current page.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getURLUtil" HideFromIDE="true">_geturlutil</name>
      <returntype>com.uwebview.ultimateurlutil</returntype>
    </method>
    <method>
      <name DesignerName="getView" HideFromIDE="true">_getview</name>
      <comment>Use this property to get UltimateWebView as android.view.View.
</comment>
      <returntype>anywheresoftware.b4a.objects.ConcreteViewWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getVisible" HideFromIDE="true">_getvisible</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getWebView" HideFromIDE="true">_getwebview</name>
      <comment>Gets or sets native B4A WebView from or to UltimateWebView.
</comment>
      <returntype>anywheresoftware.b4a.objects.WebViewWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getWidth" HideFromIDE="true">_getwidth</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="GoBack">_goback</name>
      <comment>Goes back in the history of this UltimateWebView.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="GoBackOrForward">_gobackorforward</name>
      <comment>Goes to the history item that is the number of steps away from the current item. Steps is negative if backward and positive if forward.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Steps</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GoForward">_goforward</name>
      <comment>Goes forward in the history of this UltimateWebView.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="GrantPermission">_grantpermission</name>
      <comment>Use to grant or deny permissions which is required by loaded WebSite (Camera, Microphone, Geolocation, Externall Storage...).
Event PermissionRequest (RequestedPermission As String) will be fired when permission is required.
Use RuntimePermissions library to handle permission request.
Example:
Sub UltimateWebView1_PermissionRequest (RequestedPermission As String)
	Dim rp As RuntimePermissions
	rp.CheckAndRequest(RequestedPermission)
	Wait For Activity_PermissionResult (Permission As String, result As Boolean)
	UltimateWebView1.GrantPermission(result)
End Sub
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Granted</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Method is called automatically when object is added through Designer.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Callback</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Invalidate">_invalidate</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="InvokeZoomPicker">_invokezoompicker</name>
      <comment>Invokes the graphical zoom picker widget for this WebView.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="LoadData">_loaddata</name>
      <comment>Note that JavaScript's same origin policy means that script running in a page loaded using this method will be unable to access content loaded using any scheme other than 'data', including 'http(s)'. To avoid this restriction, use LoadDataWithBaseURL() with an appropriate base URL.
The encoding parameter specifies whether the data Is base64 Or URL encoded. If the data Is base64 encoded, the value of the encoding parameter must be "base64"
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Data</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Encoding</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="LoadDataWithBaseURL">_loaddatawithbaseurl</name>
      <comment>Loads the given data into this UltimateWebView, using baseUrl as the base URL for the content. The base URL is used both to resolve relative URLs and when applying JavaScript's same origin policy. The historyUrl is used for the history entry.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>BaseUrl</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Data</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Encoding</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>HistoryUrl</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="LoadFileFromDirAssets">_loadfilefromdirassets</name>
      <comment>Loads file (HTML, TXT, PNG, JPG...) from DirAssets folder into UltimateWebView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>FileName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="LoadFileFromDirInternal">_loadfilefromdirinternal</name>
      <comment>Loads file (HTML, TXT, PNG, JPG...) from DirInternal folder into UltimateWebView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>FileName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="LoadUrl">_loadurl</name>
      <comment>Loads the given URL.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="LoadUrl2">_loadurl2</name>
      <comment>Loads the given URL with additional HTTP headers, specified as a map from name to value. Note that if this map contains any of the headers that are set by default by this UltimateWebView, such as those controlling caching, accept types or the User-Agent, their values may be overridden by this UltimateWebView's defaults.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>AdditionalHttpHeaders</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PageDown">_pagedown</name>
      <comment>Scrolls the contents of this UltimateWebView down by half the page size.
ToBottom As Boolean (true to jump to bottom of page).
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ToBottom</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PageUp">_pageup</name>
      <comment>Scrolls the contents of this UltimateWebView up by half the view size.
ToTop As Boolean (true to jump to the top of the page).
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ToTop</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Pause">_pause</name>
      <comment>Does a best-effort attempt to pause any processing that can be paused safely, such as animations and geolocation. Note that this call does not pause JavaScript. To pause JavaScript globally, use pauseTimers().
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="PauseTimers">_pausetimers</name>
      <comment>Pauses all layout, parsing, and JavaScript timers for all UltimateWebViews. This is a global requests, not restricted to just this UltimateWebView. This can be useful if the application has been paused.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="PostUrl">_posturl</name>
      <comment>Loads the URL with postData using "POST" method into this WebView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>PostData</name>
        <type>byte[]</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Reload">_reload</name>
      <comment>Reloads the current URL.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="RemoveJavascriptInterface">_removejavascriptinterface</name>
      <comment>Removes a previously injected Java object from this UltimateWebView. Note that the removal will not be reflected in JavaScript until the page is next (re)loaded.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="RemoveView">_removeview</name>
      <comment>Use this property to remove this view from parent.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Resume">_resume</name>
      <comment>Resumes a UltimateWebView after a previous call to Pause.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ResumeTimers">_resumetimers</name>
      <comment>Resumes all layout, parsing, and JavaScript timers for all UltimateWebViews. This will resume dispatching all timers.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="SaveWebArchive">_savewebarchive</name>
      <comment>Saves the current view as a web archive.
Filename As String (the filename where the archive should be placed This value cannot be null).
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Filename</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SendToBack">_sendtoback</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setBackgroundColor" HideFromIDE="true">_setbackgroundcolor</name>
      <comment>Sets the background color for this view.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setColor" HideFromIDE="true">_setcolor</name>
      <returntype>String</returntype>
      <parameter>
        <name>Color</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCookieManager" HideFromIDE="true">_setcookiemanager</name>
      <comment>Gets or sets UltimateCookieManager methods and properties. Class is auto initialized.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>UltimateCookieManager1</name>
        <type>com.uwebview.ultimatecookiemanager</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataDirectorySuffix" HideFromIDE="true">_setdatadirectorysuffix</name>
      <comment>Define the directory used to store WebView data for the current process.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Suffix</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetDownloadListener">_setdownloadlistener</name>
      <comment>Set and start Download Listener.
Events: FileDownloadInitialized (DownloadProperties1 as DownloadProperties)
Use StartFileDownload method to download file with native Download Manager, or use your own method.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHeight" HideFromIDE="true">_setheight</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setInitialScale" HideFromIDE="true">_setinitialscale</name>
      <comment>Sets the initial scale for this UltimateWebView. 0 means default.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ScaleInPercent</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLeft" HideFromIDE="true">_setleft</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMimeTypeMap" HideFromIDE="true">_setmimetypemap</name>
      <returntype>String</returntype>
      <parameter>
        <name>MimeTypeMap1</name>
        <type>com.uwebview.ultimatemimetypemap</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setNetworkAvailable" HideFromIDE="true">_setnetworkavailable</name>
      <comment>Informs WebView of the network state.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NetworkUp</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setOverScrollMode" HideFromIDE="true">_setoverscrollmode</name>
      <comment>Set the over-scroll mode for this view.
Values: OVER_SCROLL_ALWAYS, OVER_SCROLL_IF_CONTENT_SCROLLS (allow over-scrolling only if the view content is larger than the container), or OVER_SCROLL_NEVER. Setting the over-scroll mode of a view will have an effect only if the view is capable of scrolling.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Mode</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPadding" HideFromIDE="true">_setpadding</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int[]</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetRendererPriorityPolicy">_setrendererprioritypolicy</name>
      <comment>Set the renderer priority policy for this UltimateWebView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>RendererRequestedPriority</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>WaivedWhenNotVisible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setScrollBarStyle" HideFromIDE="true">_setscrollbarstyle</name>
      <comment>Specify the style of the scrollbars.
Values: For example, if a view has a background drawable and you want to draw the scrollbars inside the padding specified by the drawable, you can use SCROLLBARS_INSIDE_OVERLAY or SCROLLBARS_INSIDE_INSET. If you want them to appear at the edge of the view, ignoring the padding, then you can use SCROLLBARS_OUTSIDE_OVERLAY or SCROLLBARS_OUTSIDE_INSET.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSettings" HideFromIDE="true">_setsettings</name>
      <comment>Gets or sets UltimateWebView Settings. Class is auto initialized.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>AddSettings</name>
        <type>com.uwebview.ultimatewebviewsettings</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTag" HideFromIDE="true">_settag</name>
      <returntype>String</returntype>
      <parameter>
        <name>TagObject</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setText" HideFromIDE="true">_settext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTop" HideFromIDE="true">_settop</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setURLUtil" HideFromIDE="true">_seturlutil</name>
      <comment>Gets or sets UltimateURLUtil methods and properties. Class is auto initialized.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>URLUtil1</name>
        <type>com.uwebview.ultimateurlutil</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setVisible" HideFromIDE="true">_setvisible</name>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetWebChromeClient">_setwebchromeclient</name>
      <comment>Sets the chrome handler. This is an implementation of WebChromeClient for use in handling JavaScript dialogs, favicons, titles, and the progress.
Library will initialize WebChromeClient by itself and associate it with UltimateWebView.
Events associated: JsAlert, JsBeforeUnload, JsConfirm, PermissionRequest, PageLoadingProgressChanged, ReceivedIcon, ReceivedTitle.
Online file upload option will be enabled by default.
Geolocation permission will be handled like any other permission request and will trigger PermissionRequest event.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setWebView" HideFromIDE="true">_setwebview</name>
      <returntype>String</returntype>
      <parameter>
        <name>BAWebview</name>
        <type>anywheresoftware.b4a.objects.WebViewWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetWebViewClient">_setwebviewclient</name>
      <comment>Sets the WebViewClient that will receive various notifications and requests.
Library will initialize WebViewCliect by itself and associate it with UltimateWebView.
Events associated: LoadResource, OverrideUrl, PageCommitVisible, PageFinished, PageStarted, ReceivedHttpError, ReceivedHttpAuthRequest, ReceivedError, ReceivedLoginRequest, ShouldInterceptRequest, UpdateVisitedHistory.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setWidth" HideFromIDE="true">_setwidth</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="StartFileDownload">_startfiledownload</name>
      <comment>Use this method to download file with native Download Manager.
Events:
FileDownloadStarted (DownloadProperties1 As DownloadProperties)
FileDownloadCompleted (Success As Boolean, DownloadProperties1 As DownloadProperties)
File will be downloaded in "Download" folder.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DownloadProperties1</name>
        <type>com.uwebview.ultimatewebview._downloadproperties</type>
      </parameter>
      <parameter>
        <name>DownloadManagerDescription</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>AllowScanningByMediaScanner</name>
        <type>boolean</type>
      </parameter>
      <parameter>
        <name>DownloadManagerNotification</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="StopLoading">_stoploading</name>
      <comment>Stops the current load.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ZoomBy">_zoomby</name>
      <comment>Performs a zoom operation in this UltimateWebView.
ZoomFactor As Float (the zoom factor to apply. The zoom factor will be clamped to the UltimateWebView's zoom limits. This value must be in the range 0.01 to 100.0 inclusive).
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ZoomFactor</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ZoomIn">_zoomin</name>
      <comment>Performs zoom in in this UltimateWebView.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="ZoomOut">_zoomout</name>
      <comment>Performs zoom out in this UltimateWebView.
</comment>
      <returntype>boolean</returntype>
    </method>
    <property>
      <name DesignerName="AccessibilityClassName">_accessibilityclassname</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Constants">_constants</name>
      <returntype>com.uwebview.ultimatewebviewconstants</returntype>
    </property>
    <property>
      <name DesignerName="ContentHeight">_contentheight</name>
      <comment>Gets the height in pixels of the HTML content.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="CookieManager">_cookiemanager</name>
      <comment>Gets or sets UltimateCookieManager methods and properties. Class is auto initialized.
</comment>
      <returntype>com.uwebview.ultimatecookiemanager</returntype>
      <parameter>
        <name>Value</name>
        <type>com.uwebview.ultimatecookiemanager</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="CopyBackForwardList">_copybackforwardlist</name>
      <returntype>com.uwebview.webbackforwardlist</returntype>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="FavIcon">_favicon</name>
      <comment>Gets the favicon for the current page.
</comment>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="IsPrivateBrowsingEnabled">_isprivatebrowsingenabled</name>
      <comment>Gets whether private browsing is enabled in this UltimateWebView.
</comment>
      <returntype>boolean</returntype>
    </property>
    <property>
      <name DesignerName="Left">_left</name>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MimeTypeMap">_mimetypemap</name>
      <comment>Gets or sets UltimateMimeTypeMap methods and properties. Class is auto initialized.
</comment>
      <returntype>com.uwebview.ultimatemimetypemap</returntype>
      <parameter>
        <name>Value</name>
        <type>com.uwebview.ultimatemimetypemap</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="OnCheckIsTextEditor">_oncheckistexteditor</name>
      <comment>Check whether the called view is a text editor, in which case it would make sense to automatically display a soft input window for it.
</comment>
      <returntype>boolean</returntype>
    </property>
    <property>
      <name DesignerName="OriginalUrl">_originalurl</name>
      <comment>Gets the original URL for the current page.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Padding">_padding</name>
      <returntype>int[]</returntype>
      <parameter>
        <name>Value</name>
        <type>int[]</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Parent">_parent</name>
      <returntype>Object</returntype>
    </property>
    <property>
      <name DesignerName="Progress">_progress</name>
      <comment>Gets the progress for the current page.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="SafeBrowsingPrivacyPolicyUrl">_safebrowsingprivacypolicyurl</name>
      <comment>Gets android.net.Uri as AndroidNetUri. Link for AndroidNetUri library and documentations:
https://www.b4x.com/android/forum/threads/androidneturi-library.136402/
</comment>
      <returntype>ba.uri.androidneturi</returntype>
    </property>
    <property>
      <name DesignerName="Settings">_settings</name>
      <comment>Gets or sets UltimateWebView Settings. Class is auto initialized.
</comment>
      <returntype>com.uwebview.ultimatewebviewsettings</returntype>
      <parameter>
        <name>Value</name>
        <type>com.uwebview.ultimatewebviewsettings</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Tag">_tag</name>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>Object</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Text">_text</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Title">_title</name>
      <comment>Gets the title for the current page.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Top">_top</name>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Url">_url</name>
      <comment>Gets the URL for the current page.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="URLUtil">_urlutil</name>
      <comment>Gets or sets UltimateURLUtil methods and properties. Class is auto initialized.
</comment>
      <returntype>com.uwebview.ultimateurlutil</returntype>
      <parameter>
        <name>Value</name>
        <type>com.uwebview.ultimateurlutil</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="View">_view</name>
      <comment>Use this property to get UltimateWebView as android.view.View.
</comment>
      <returntype>anywheresoftware.b4a.objects.ConcreteViewWrapper</returntype>
    </property>
    <property>
      <name DesignerName="Visible">_visible</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="WebView">_webview</name>
      <comment>Gets or sets native B4A WebView from or to UltimateWebView.
</comment>
      <returntype>anywheresoftware.b4a.objects.WebViewWrapper</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.WebViewWrapper</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Width">_width</name>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BackgroundColor">_backgroundcolor</name>
      <comment>Sets the background color for this view.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Color">_color</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataDirectorySuffix">_datadirectorysuffix</name>
      <comment>Define the directory used to store WebView data for the current process.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="InitialScale">_initialscale</name>
      <comment>Sets the initial scale for this UltimateWebView. 0 means default.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="NetworkAvailable">_networkavailable</name>
      <comment>Informs WebView of the network state.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="OverScrollMode">_overscrollmode</name>
      <comment>Set the over-scroll mode for this view.
Values: OVER_SCROLL_ALWAYS, OVER_SCROLL_IF_CONTENT_SCROLLS (allow over-scrolling only if the view content is larger than the container), or OVER_SCROLL_NEVER. Setting the over-scroll mode of a view will have an effect only if the view is capable of scrolling.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ScrollBarStyle">_scrollbarstyle</name>
      <comment>Specify the style of the scrollbars.
Values: For example, if a view has a background drawable and you want to draw the scrollbars inside the padding specified by the drawable, you can use SCROLLBARS_INSIDE_OVERLAY or SCROLLBARS_INSIDE_INSET. If you want them to appear at the edge of the view, ignoring the padding, then you can use SCROLLBARS_OUTSIDE_OVERLAY or SCROLLBARS_OUTSIDE_INSET.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
  </class>
  <class>
    <name>com.uwebview.ultimatecookiemanager</name>
    <shortname>UltimateCookieManager</shortname>
    <owner>activity</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Flush">_flush</name>
      <comment>Ensures all cookies currently accessible through the getCookie API are written to persistent storage.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAcceptCookies" HideFromIDE="true">_getacceptcookies</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAcceptFileSchemeCookies" HideFromIDE="true">_getacceptfileschemecookies</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAcceptThirdPartyCookies" HideFromIDE="true">_getacceptthirdpartycookies</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="GetCookie">_getcookie</name>
      <comment>Gets all the cookies for the given URL.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="HasCookies">_hascookies</name>
      <comment>Gets whether there are stored cookies.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>UltimateWebView1</name>
        <type>com.uwebview.ultimatewebview</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="RemoveAllCookies">_removeallcookies</name>
      <comment>Removes all cookies.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="RemoveExpiredCookie">_removeexpiredcookie</name>
      <comment>This method was deprecated in API level 21. The WebView handles removing expired cookies automatically.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="RemoveSessionCookies">_removesessioncookies</name>
      <comment>Removes all session cookies, which are cookies without an expiration date.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAcceptCookies" HideFromIDE="true">_setacceptcookies</name>
      <comment>Gets or sets whether the application's UltimateWebView instances send and accept cookies.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Accept</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAcceptFileSchemeCookies" HideFromIDE="true">_setacceptfileschemecookies</name>
      <comment>This method was deprecated in API level 30. This setting is not secure.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Accept</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAcceptThirdPartyCookies" HideFromIDE="true">_setacceptthirdpartycookies</name>
      <comment>Gets or sets whether the UltimateWebView should allow third party cookies to be set.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Accept</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetCookie">_setcookie</name>
      <comment>Sets a single cookie (key-value pair) for the given URL.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="AcceptCookies">_acceptcookies</name>
      <comment>Gets or sets whether the application's UltimateWebView instances send and accept cookies.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AcceptFileSchemeCookies">_acceptfileschemecookies</name>
      <comment>This method was deprecated in API level 30. This setting is not secure.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AcceptThirdPartyCookies">_acceptthirdpartycookies</name>
      <comment>Gets or sets whether the UltimateWebView should allow third party cookies to be set.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
  </class>
  <class>
    <name>com.uwebview.ultimatewebviewconstants</name>
    <shortname>UltimateWebViewConstants</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <field>
      <name DesignerName="OVER_SCROLL_ALWAYS">_over_scroll_always</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="OVER_SCROLL_IF_CONTENT_SCROLLS">_over_scroll_if_content_scrolls</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="OVER_SCROLL_NEVER">_over_scroll_never</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="SCROLLBARS_INSIDE_OVERLAY">_scrollbars_inside_overlay</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="SCROLLBARS_INSIDE_INSET">_scrollbars_inside_inset</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="SCROLLBARS_OUTSIDE_OVERLAY">_scrollbars_outside_overlay</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="SCROLLBARS_OUTSIDE_INSET">_scrollbars_outside_inset</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="RENDERER_PRIORITY_BOUND">_renderer_priority_bound</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="RENDERER_PRIORITY_IMPORTANT">_renderer_priority_important</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="RENDERER_PRIORITY_WAIVED">_renderer_priority_waived</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CACHEMODE_LOAD_DEFAULT">_cachemode_load_default</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CACHEMODE_LOAD_CACHE_ELSE_NETWORK">_cachemode_load_cache_else_network</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CACHEMODE_LOAD_NO_CACHE">_cachemode_load_no_cache</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="CACHEMODE_LOAD_CACHE_ONLY">_cachemode_load_cache_only</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MENU_ITEM_NONE">_menu_item_none</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MENU_ITEM_PROCESS_TEXT">_menu_item_process_text</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MENU_ITEM_SHARE">_menu_item_share</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MENU_ITEM_WEB_SEARCH">_menu_item_web_search</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="FORCE_DARK_AUTO">_force_dark_auto</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="FORCE_DARK_OFF">_force_dark_off</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="FORCE_DARK_ON">_force_dark_on</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MIXED_CONTENT_ALWAYS_ALLOW">_mixed_content_always_allow</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MIXED_CONTENT_COMPATIBILITY_MODE">_mixed_content_compatibility_mode</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="MIXED_CONTENT_NEVER_ALLOW">_mixed_content_never_allow</name>
      <returntype>int</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.ultimatemimetypemap</name>
    <shortname>UltimateMimeTypeMap</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="ExtensionFromMimeType">_extensionfrommimetype</name>
      <comment>Return the registered extension for the given MIME type.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="FileExtensionFromUrl">_fileextensionfromurl</name>
      <comment>Returns the file extension or an empty string if there is no extension.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="HasExtension">_hasextension</name>
      <comment>Return true if the given extension has a registered MIME type.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Extension</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="HasMimeType">_hasmimetype</name>
      <comment>Return true if the given MIME type has an entry in the map.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="MimeTypeFromExtension">_mimetypefromextension</name>
      <comment>Return the MIME type for the given extension.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Extension</name>
        <type>String</type>
      </parameter>
    </method>
  </class>
  <class>
    <name>com.uwebview.ultimateurlutil</name>
    <shortname>UltimateURLUtil</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="ComposeSearchUrl">_composesearchurl</name>
      <returntype>String</returntype>
      <parameter>
        <name>InQuery</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Template</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>QueryPlaceHolder</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Decode">_decode</name>
      <returntype>byte[]</returntype>
      <parameter>
        <name>Url</name>
        <type>byte[]</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GuessFileName">_guessfilename</name>
      <comment>Guesses canonical filename that a download would have, using the URL and contentDisposition.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>ContentDisposition</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GuessUrl">_guessurl</name>
      <comment>Cleans up (if possible) user-entered web addresses
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>InUrl</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsAboutUrl">_isabouturl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsAssetUrl">_isasseturl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsContentUrl">_iscontenturl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsDataUrl">_isdataurl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsFileUrl">_isfileurl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsHttpsUrl">_ishttpsurl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsHttpUrl">_ishttpurl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsJavaScriptUrl">_isjavascripturl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsNetworkUrl">_isnetworkurl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsValidUrl">_isvalidurl</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="StripAnchor">_stripanchor</name>
      <comment>Strips the url of the anchor.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Url</name>
        <type>String</type>
      </parameter>
    </method>
  </class>
  <class>
    <name>com.uwebview.ultimatewebviewsettings</name>
    <shortname>UltimateWebViewSettings</shortname>
    <owner>activity</owner>
    <permission>android.permission.INTERNET</permission>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAllowContentAccess" HideFromIDE="true">_getallowcontentaccess</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAllowFileAccess" HideFromIDE="true">_getallowfileaccess</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAllowFileAccessFromFileURLs" HideFromIDE="true">_getallowfileaccessfromfileurls</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAllowUniversalAccessFromFileURLs" HideFromIDE="true">_getallowuniversalaccessfromfileurls</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getBlockNetworkImage" HideFromIDE="true">_getblocknetworkimage</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getBlockNetworkLoads" HideFromIDE="true">_getblocknetworkloads</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getBuiltInZoomControls" HideFromIDE="true">_getbuiltinzoomcontrols</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getCacheMode" HideFromIDE="true">_getcachemode</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getConstants" HideFromIDE="true">_getconstants</name>
      <returntype>com.uwebview.ultimatewebviewconstants</returntype>
    </method>
    <method>
      <name DesignerName="getCursiveFontFamily" HideFromIDE="true">_getcursivefontfamily</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDatabaseEnabled" HideFromIDE="true">_getdatabaseenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDatabasePath" HideFromIDE="true">_getdatabasepath</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDefaultFixedFontSize" HideFromIDE="true">_getdefaultfixedfontsize</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getDefaultFontSize" HideFromIDE="true">_getdefaultfontsize</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getDefaultTextEncodingName" HideFromIDE="true">_getdefaulttextencodingname</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDisabledActionModeMenuItems" HideFromIDE="true">_getdisabledactionmodemenuitems</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getDisplayZoomControls" HideFromIDE="true">_getdisplayzoomcontrols</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDomStorageEnabled" HideFromIDE="true">_getdomstorageenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getEnableSmoothTransition" HideFromIDE="true">_getenablesmoothtransition</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getFantasyFontFamily" HideFromIDE="true">_getfantasyfontfamily</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getFixedFontFamily" HideFromIDE="true">_getfixedfontfamily</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getForceDark" HideFromIDE="true">_getforcedark</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getJavaScriptCanOpenWindowsAutomatically" HideFromIDE="true">_getjavascriptcanopenwindowsautomatically</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getJavaScriptEnabled" HideFromIDE="true">_getjavascriptenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getLightTouchEnabled" HideFromIDE="true">_getlighttouchenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getLoadsImagesAutomatically" HideFromIDE="true">_getloadsimagesautomatically</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getLoadWithOverviewMode" HideFromIDE="true">_getloadwithoverviewmode</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getMediaPlaybackRequiresUserGesture" HideFromIDE="true">_getmediaplaybackrequiresusergesture</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getMinimumFontSize" HideFromIDE="true">_getminimumfontsize</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMinimumLogicalFontSize" HideFromIDE="true">_getminimumlogicalfontsize</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMixedContentMode" HideFromIDE="true">_getmixedcontentmode</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getOffscreenPreRaster" HideFromIDE="true">_getoffscreenpreraster</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getSafeBrowsingEnabled" HideFromIDE="true">_getsafebrowsingenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getSansSerifFontFamily" HideFromIDE="true">_getsansseriffontfamily</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSaveFormData" HideFromIDE="true">_getsaveformdata</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getSavePassword" HideFromIDE="true">_getsavepassword</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getSerifFontFamily" HideFromIDE="true">_getseriffontfamily</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStandardFontFamily" HideFromIDE="true">_getstandardfontfamily</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSupportMultipleWindows" HideFromIDE="true">_getsupportmultiplewindows</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getSupportZoom" HideFromIDE="true">_getsupportzoom</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getTextZoom" HideFromIDE="true">_gettextzoom</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getUserAgentString" HideFromIDE="true">_getuseragentstring</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getUseWideViewPort" HideFromIDE="true">_getusewideviewport</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. You can add parameters to this method if needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>UltimateWebView1</name>
        <type>com.uwebview.ultimatewebview</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAllowContentAccess" HideFromIDE="true">_setallowcontentaccess</name>
      <comment>Enables or disables content URL access within WebView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAllowFileAccess" HideFromIDE="true">_setallowfileaccess</name>
      <comment>Enables or disables file access within WebView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAllowFileAccessFromFileURLs" HideFromIDE="true">_setallowfileaccessfromfileurls</name>
      <comment>This method was deprecated in API level 30. This setting is not secure.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAllowUniversalAccessFromFileURLs" HideFromIDE="true">_setallowuniversalaccessfromfileurls</name>
      <comment>This method was deprecated in API level 30. This setting is not secure.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAppCacheEnabled" HideFromIDE="true">_setappcacheenabled</name>
      <comment>This method was deprecated in API level 30. The Application Cache API is deprecated and this method will become a no-op on all Android versions once support is removed in Chromium. Consider using Service Workers instead. See https://web.dev/appcache-removal/ for more information.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAppCacheMaxSize" HideFromIDE="true">_setappcachemaxsize</name>
      <comment>This method was deprecated in API level 18. Quota is managed automatically; this method is a no-op.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAppCachePath" HideFromIDE="true">_setappcachepath</name>
      <comment>This method was deprecated in API level 30. The Application Cache API is deprecated and this method will become a no-op on all Android versions once support is removed in Chromium. Consider using Service Workers instead. See https://web.dev/appcache-removal/ for more information.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBlockNetworkImage" HideFromIDE="true">_setblocknetworkimage</name>
      <comment>Sets whether the WebView should not load image resources from the network (resources accessed via http and https URI schemes).
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBlockNetworkLoads" HideFromIDE="true">_setblocknetworkloads</name>
      <comment>Sets whether the WebView should not load resources from the network.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setBuiltInZoomControls" HideFromIDE="true">_setbuiltinzoomcontrols</name>
      <comment>Sets whether the WebView should use its built-in zoom mechanisms.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Action</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCacheMode" HideFromIDE="true">_setcachemode</name>
      <comment>Overrides the way the cache is used.
Values (CacheMode_LOAD_DEFAULT=-1, CacheMode_LOAD_CACHE_ELSE_NETWORK=1, CacheMode_LOAD_NO_CACHE=2, CacheMode_LOAD_CACHE_ONLY=3)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCursiveFontFamily" HideFromIDE="true">_setcursivefontfamily</name>
      <comment>Sets the cursive font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDatabaseEnabled" HideFromIDE="true">_setdatabaseenabled</name>
      <comment>Sets whether the database storage API is enabled.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDatabasePath" HideFromIDE="true">_setdatabasepath</name>
      <comment>This method was deprecated in API level 19. Database paths are managed by the implementation and calling this method will have no effect.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDefaultFixedFontSize" HideFromIDE="true">_setdefaultfixedfontsize</name>
      <comment>Sets the default fixed font size.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDefaultFontSize" HideFromIDE="true">_setdefaultfontsize</name>
      <comment>Sets the default font size.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDefaultTextEncodingName" HideFromIDE="true">_setdefaulttextencodingname</name>
      <comment>Sets the default text encoding name to use when decoding html pages.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDisabledActionModeMenuItems" HideFromIDE="true">_setdisabledactionmodemenuitems</name>
      <comment>Disables the action mode menu items according to menuItems flag.
Values (MENU_ITEM_NONE=0, MENU_ITEM_SHARE=1, MENU_ITEM_WEB_SEARCH=2, MENU_ITEM_PROCESS_TEXT=4)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDisplayZoomControls" HideFromIDE="true">_setdisplayzoomcontrols</name>
      <comment>Sets whether the WebView should display on-screen zoom controls when using the built-in zoom mechanisms.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDomStorageEnabled" HideFromIDE="true">_setdomstorageenabled</name>
      <comment>Sets whether the DOM storage API is enabled.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnableSmoothTransition" HideFromIDE="true">_setenablesmoothtransition</name>
      <comment>This method was deprecated in API level 17. This method is now obsolete, and will become a no-op in future.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFantasyFontFamily" HideFromIDE="true">_setfantasyfontfamily</name>
      <comment>Sets the fantasy font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFixedFontFamily" HideFromIDE="true">_setfixedfontfamily</name>
      <comment>Sets the fixed font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setForceDark" HideFromIDE="true">_setforcedark</name>
      <comment>Set the force dark mode for this WebView.
Values (FORCE_DARK_OFF=0, FORCE_DARK_AUTO=1, FORCE_DARK_ON=2)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setGeolocationDatabasePath" HideFromIDE="true">_setgeolocationdatabasepath</name>
      <comment>This method was deprecated in API level 24. Geolocation database are managed by the implementation and calling this method will have no effect.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setGeolocationEnabled" HideFromIDE="true">_setgeolocationenabled</name>
      <comment>Sets whether Geolocation is enabled.
Permissions in manifest (Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION)
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setJavaScriptCanOpenWindowsAutomatically" HideFromIDE="true">_setjavascriptcanopenwindowsautomatically</name>
      <comment>Tells JavaScript to open windows automatically.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setJavaScriptEnabled" HideFromIDE="true">_setjavascriptenabled</name>
      <comment>Tells the WebView to enable JavaScript execution.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLightTouchEnabled" HideFromIDE="true">_setlighttouchenabled</name>
      <comment>This method was deprecated in API level 18. From Build.VERSION_CODES.JELLY_BEAN this setting is obsolete and has no effect.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLoadsImagesAutomatically" HideFromIDE="true">_setloadsimagesautomatically</name>
      <comment>Sets whether the WebView should load image resources.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLoadWithOverviewMode" HideFromIDE="true">_setloadwithoverviewmode</name>
      <comment>Sets whether the WebView loads pages in overview mode, that is, zooms out the content to fit on screen by width.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMediaPlaybackRequiresUserGesture" HideFromIDE="true">_setmediaplaybackrequiresusergesture</name>
      <comment>Sets whether the WebView requires a user gesture to play media.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMinimumFontSize" HideFromIDE="true">_setminimumfontsize</name>
      <comment>Sets the minimum font size.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMinimumLogicalFontSize" HideFromIDE="true">_setminimumlogicalfontsize</name>
      <comment>Sets the minimum logical font size.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMixedContentMode" HideFromIDE="true">_setmixedcontentmode</name>
      <comment>Configures the WebView's behavior when a secure origin attempts to load a resource from an insecure origin.
Values (MIXED_CONTENT_ALWAYS_ALLOW=0, MIXED_CONTENT_NEVER_ALLOW=1, MIXED_CONTENT_COMPATIBILITY_MODE=2).
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setNeedInitialFocus" HideFromIDE="true">_setneedinitialfocus</name>
      <comment>Tells the WebView whether it needs to set a node to have focus when WebView#requestFocus(int, android.graphics.Rect) is called.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setOffscreenPreRaster" HideFromIDE="true">_setoffscreenpreraster</name>
      <comment>Sets whether this WebView should raster tiles when it is offscreen but attached to a window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSafeBrowsingEnabled" HideFromIDE="true">_setsafebrowsingenabled</name>
      <comment>Sets whether Safe Browsing is enabled.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSansSerifFontFamily" HideFromIDE="true">_setsansseriffontfamily</name>
      <comment>Sets the sans-serif font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSaveFormData" HideFromIDE="true">_setsaveformdata</name>
      <comment>This method was deprecated in API level 26. In Android O and afterwards, this function does not have any effect, the form data will be saved to platform's autofill service if applicable.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSavePassword" HideFromIDE="true">_setsavepassword</name>
      <comment>This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSerifFontFamily" HideFromIDE="true">_setseriffontfamily</name>
      <comment>Sets the serif font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStandardFontFamily" HideFromIDE="true">_setstandardfontfamily</name>
      <comment>Sets the standard font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSupportMultipleWindows" HideFromIDE="true">_setsupportmultiplewindows</name>
      <comment>Sets whether the WebView whether supports multiple windows.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSupportZoom" HideFromIDE="true">_setsupportzoom</name>
      <comment>Sets whether the WebView should support zooming using its on-screen zoom controls and gestures.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTextZoom" HideFromIDE="true">_settextzoom</name>
      <comment>Sets the text zoom of the page in percent.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setUserAgentString" HideFromIDE="true">_setuseragentstring</name>
      <comment>Sets the WebView's user-agent string.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setUseWideViewPort" HideFromIDE="true">_setusewideviewport</name>
      <comment>Sets whether the WebView should enable support for the "viewport" HTML meta tag or should use a wide viewport.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="AllowContentAccess">_allowcontentaccess</name>
      <comment>Enables or disables content URL access within WebView.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AllowFileAccess">_allowfileaccess</name>
      <comment>Enables or disables file access within WebView.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AllowFileAccessFromFileURLs">_allowfileaccessfromfileurls</name>
      <comment>This method was deprecated in API level 30. This setting is not secure.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AllowUniversalAccessFromFileURLs">_allowuniversalaccessfromfileurls</name>
      <comment>This method was deprecated in API level 30. This setting is not secure.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BlockNetworkImage">_blocknetworkimage</name>
      <comment>Sets whether the WebView should not load image resources from the network (resources accessed via http and https URI schemes).
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BlockNetworkLoads">_blocknetworkloads</name>
      <comment>Sets whether the WebView should not load resources from the network.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="BuiltInZoomControls">_builtinzoomcontrols</name>
      <comment>Sets whether the WebView should use its built-in zoom mechanisms.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="CacheMode">_cachemode</name>
      <comment>Overrides the way the cache is used.
Values (CacheMode_LOAD_DEFAULT=-1, CacheMode_LOAD_CACHE_ELSE_NETWORK=1, CacheMode_LOAD_NO_CACHE=2, CacheMode_LOAD_CACHE_ONLY=3)
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Constants">_constants</name>
      <returntype>com.uwebview.ultimatewebviewconstants</returntype>
    </property>
    <property>
      <name DesignerName="CursiveFontFamily">_cursivefontfamily</name>
      <comment>Sets the cursive font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DatabaseEnabled">_databaseenabled</name>
      <comment>Sets whether the database storage API is enabled.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DatabasePath">_databasepath</name>
      <comment>This method was deprecated in API level 19. Database paths are managed by the implementation and calling this method will have no effect.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DefaultFixedFontSize">_defaultfixedfontsize</name>
      <comment>Sets the default fixed font size.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DefaultFontSize">_defaultfontsize</name>
      <comment>Sets the default font size.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DefaultTextEncodingName">_defaulttextencodingname</name>
      <comment>Sets the default text encoding name to use when decoding html pages.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DisabledActionModeMenuItems">_disabledactionmodemenuitems</name>
      <comment>Disables the action mode menu items according to menuItems flag.
Values (MENU_ITEM_NONE=0, MENU_ITEM_SHARE=1, MENU_ITEM_WEB_SEARCH=2, MENU_ITEM_PROCESS_TEXT=4)
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DisplayZoomControls">_displayzoomcontrols</name>
      <comment>Sets whether the WebView should display on-screen zoom controls when using the built-in zoom mechanisms.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DomStorageEnabled">_domstorageenabled</name>
      <comment>Sets whether the DOM storage API is enabled.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="EnableSmoothTransition">_enablesmoothtransition</name>
      <comment>This method was deprecated in API level 17. This method is now obsolete, and will become a no-op in future.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="FantasyFontFamily">_fantasyfontfamily</name>
      <comment>Sets the fantasy font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="FixedFontFamily">_fixedfontfamily</name>
      <comment>Sets the fixed font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ForceDark">_forcedark</name>
      <comment>Set the force dark mode for this WebView.
Values (FORCE_DARK_OFF=0, FORCE_DARK_AUTO=1, FORCE_DARK_ON=2)
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="JavaScriptCanOpenWindowsAutomatically">_javascriptcanopenwindowsautomatically</name>
      <comment>Tells JavaScript to open windows automatically.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="JavaScriptEnabled">_javascriptenabled</name>
      <comment>Tells the WebView to enable JavaScript execution.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="LightTouchEnabled">_lighttouchenabled</name>
      <comment>This method was deprecated in API level 18. From Build.VERSION_CODES.JELLY_BEAN this setting is obsolete and has no effect.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="LoadsImagesAutomatically">_loadsimagesautomatically</name>
      <comment>Sets whether the WebView should load image resources.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="LoadWithOverviewMode">_loadwithoverviewmode</name>
      <comment>Sets whether the WebView loads pages in overview mode, that is, zooms out the content to fit on screen by width.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MediaPlaybackRequiresUserGesture">_mediaplaybackrequiresusergesture</name>
      <comment>Sets whether the WebView requires a user gesture to play media.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MinimumFontSize">_minimumfontsize</name>
      <comment>Sets the minimum font size.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MinimumLogicalFontSize">_minimumlogicalfontsize</name>
      <comment>Sets the minimum logical font size.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MixedContentMode">_mixedcontentmode</name>
      <comment>Configures the WebView's behavior when a secure origin attempts to load a resource from an insecure origin.
Values (MIXED_CONTENT_ALWAYS_ALLOW=0, MIXED_CONTENT_NEVER_ALLOW=1, MIXED_CONTENT_COMPATIBILITY_MODE=2).
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="OffscreenPreRaster">_offscreenpreraster</name>
      <comment>Sets whether this WebView should raster tiles when it is offscreen but attached to a window.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SafeBrowsingEnabled">_safebrowsingenabled</name>
      <comment>Sets whether Safe Browsing is enabled.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SansSerifFontFamily">_sansseriffontfamily</name>
      <comment>Sets the sans-serif font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SaveFormData">_saveformdata</name>
      <comment>This method was deprecated in API level 26. In Android O and afterwards, this function does not have any effect, the form data will be saved to platform's autofill service if applicable.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SavePassword">_savepassword</name>
      <comment>This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SerifFontFamily">_seriffontfamily</name>
      <comment>Sets the serif font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="StandardFontFamily">_standardfontfamily</name>
      <comment>Sets the standard font family name.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SupportMultipleWindows">_supportmultiplewindows</name>
      <comment>Sets whether the WebView whether supports multiple windows.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="SupportZoom">_supportzoom</name>
      <comment>Sets whether the WebView should support zooming using its on-screen zoom controls and gestures.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="TextZoom">_textzoom</name>
      <comment>Sets the text zoom of the page in percent.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="UserAgentString">_useragentstring</name>
      <comment>Sets the WebView's user-agent string.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="UseWideViewPort">_usewideviewport</name>
      <comment>Sets whether the WebView should enable support for the "viewport" HTML meta tag or should use a wide viewport.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AppCacheEnabled">_appcacheenabled</name>
      <comment>This method was deprecated in API level 30. The Application Cache API is deprecated and this method will become a no-op on all Android versions once support is removed in Chromium. Consider using Service Workers instead. See https://web.dev/appcache-removal/ for more information.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AppCacheMaxSize">_appcachemaxsize</name>
      <comment>This method was deprecated in API level 18. Quota is managed automatically; this method is a no-op.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AppCachePath">_appcachepath</name>
      <comment>This method was deprecated in API level 30. The Application Cache API is deprecated and this method will become a no-op on all Android versions once support is removed in Chromium. Consider using Service Workers instead. See https://web.dev/appcache-removal/ for more information.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="GeolocationDatabasePath">_geolocationdatabasepath</name>
      <comment>This method was deprecated in API level 24. Geolocation database are managed by the implementation and calling this method will have no effect.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="GeolocationEnabled">_geolocationenabled</name>
      <comment>Sets whether Geolocation is enabled.
Permissions in manifest (Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION)
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="NeedInitialFocus">_needinitialfocus</name>
      <comment>Tells the WebView whether it needs to set a node to have focus when WebView#requestFocus(int, android.graphics.Rect) is called.
</comment>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
  </class>
  <class>
    <name>com.uwebview.fileprovider</name>
    <shortname>FileProvider</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="GetFileUri">_getfileuri</name>
      <comment>Returns the file uri.
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>FileName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetFileUriAsIntentData">_setfileuriasintentdata</name>
      <comment>Replaces the intent Data field with the file uri.
Resets the type field. Make sure to call Intent.SetType after calling this method
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Intent</name>
        <type>anywheresoftware.b4a.objects.IntentWrapper</type>
      </parameter>
      <parameter>
        <name>FileName</name>
        <type>String</type>
      </parameter>
    </method>
    <field>
      <name DesignerName="SharedFolder">_sharedfolder</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="UseFileProvider">_usefileprovider</name>
      <returntype>boolean</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.webbackforwardlist._webhistoryitem</name>
    <shortname>WebHistoryItem</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Favicon</name>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
    </field>
    <field>
      <name>OriginalUrl</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>Title</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>Url</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.webbackforwardlist</name>
    <shortname>WebBackForwardList</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getCurrentIndex" HideFromIDE="true">_getcurrentindex</name>
      <comment>Get the index of the current history item.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getCurrentItem" HideFromIDE="true">_getcurrentitem</name>
      <comment>Return the current history item.
</comment>
      <returntype>com.uwebview.webbackforwardlist._webhistoryitem</returntype>
    </method>
    <method>
      <name DesignerName="GetItemAtIndex">_getitematindex</name>
      <comment>Get the history item at the given index.
</comment>
      <returntype>com.uwebview.webbackforwardlist._webhistoryitem</returntype>
      <parameter>
        <name>Index</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getSize" HideFromIDE="true">_getsize</name>
      <comment>Get the total size of the back/forward list.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>UltimateWebView1</name>
        <type>com.uwebview.ultimatewebview</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="toList">_tolist</name>
      <comment>Convrets object to List Of WebHistoryItem
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="toObject">_toobject</name>
      <comment>Returns Object as android.webkit.WebBackForwardList which can be used in Java Code.
</comment>
      <returntype>Object</returntype>
    </method>
    <property>
      <name DesignerName="CurrentIndex">_currentindex</name>
      <comment>Get the index of the current history item.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="CurrentItem">_currentitem</name>
      <comment>Return the current history item.
</comment>
      <returntype>com.uwebview.webbackforwardlist._webhistoryitem</returntype>
    </property>
    <property>
      <name DesignerName="Size">_size</name>
      <comment>Get the total size of the back/forward list.
</comment>
      <returntype>int</returntype>
    </property>
  </class>
  <class>
    <name>com.uwebview.webresourcerequest</name>
    <shortname>WebResourceRequest</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getGetMethod" HideFromIDE="true">_getgetmethod</name>
      <comment>Gets the method associated with the request, for example "GET".
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getGetRequestHeaders" HideFromIDE="true">_getgetrequestheaders</name>
      <comment>Gets the headers associated with the request.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getGetUrl" HideFromIDE="true">_getgeturl</name>
      <comment>Gets the URL for which the resource request was made.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getHasGesture" HideFromIDE="true">_gethasgesture</name>
      <comment>Gets whether a gesture (such as a click) was associated with the request.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getIsForMainFrame" HideFromIDE="true">_getisformainframe</name>
      <comment>Gets whether the request was made in order to fetch the main frame's document.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getIsRedirect" HideFromIDE="true">_getisredirect</name>
      <comment>Gets whether the request was a result of a server-side redirect.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>JavaWebResourceRequest</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="toObject">_toobject</name>
      <comment>Returns Object as android.webkit.WebResourceRequest which can be used in Java Code.
</comment>
      <returntype>Object</returntype>
    </method>
    <property>
      <name DesignerName="GetMethod">_getmethod</name>
      <comment>Gets the method associated with the request, for example "GET".
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="GetRequestHeaders">_getrequestheaders</name>
      <comment>Gets the headers associated with the request.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </property>
    <property>
      <name DesignerName="GetUrl">_geturl</name>
      <comment>Gets the URL for which the resource request was made.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="HasGesture">_hasgesture</name>
      <comment>Gets whether a gesture (such as a click) was associated with the request.
</comment>
      <returntype>boolean</returntype>
    </property>
    <property>
      <name DesignerName="IsForMainFrame">_isformainframe</name>
      <comment>Gets whether the request was made in order to fetch the main frame's document.
</comment>
      <returntype>boolean</returntype>
    </property>
    <property>
      <name DesignerName="IsRedirect">_isredirect</name>
      <comment>Gets whether the request was a result of a server-side redirect.
</comment>
      <returntype>boolean</returntype>
    </property>
  </class>
  <class>
    <name>com.uwebview.consolemessage._messagelevels</name>
    <shortname>MessageLevels</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>DEBUG</name>
      <returntype>Object</returntype>
    </field>
    <field>
      <name>ERROR</name>
      <returntype>Object</returntype>
    </field>
    <field>
      <name>LOG_</name>
      <returntype>Object</returntype>
    </field>
    <field>
      <name>TIP</name>
      <returntype>Object</returntype>
    </field>
    <field>
      <name>WARNING</name>
      <returntype>Object</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.consolemessage</name>
    <shortname>ConsoleMessage</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Create">_create</name>
      <returntype>String</returntype>
      <parameter>
        <name>Message</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>SourceID</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>LineNumber</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>MSGLevel</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Create2">_create2</name>
      <returntype>String</returntype>
      <parameter>
        <name>JavaConsoleMessage</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getLineNumber" HideFromIDE="true">_getlinenumber</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMessage" HideFromIDE="true">_getmessage</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMessageLevel" HideFromIDE="true">_getmessagelevel</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getMessageLevels" HideFromIDE="true">_getmessagelevels</name>
      <returntype>com.uwebview.consolemessage._messagelevels</returntype>
    </method>
    <method>
      <name DesignerName="getSourceId" HideFromIDE="true">_getsourceid</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="LineNumber">_linenumber</name>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="Message">_message</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="MessageLevel">_messagelevel</name>
      <returntype>Object</returntype>
    </property>
    <property>
      <name DesignerName="MessageLevels">_messagelevels</name>
      <returntype>com.uwebview.consolemessage._messagelevels</returntype>
    </property>
    <property>
      <name DesignerName="SourceId">_sourceid</name>
      <returntype>String</returntype>
    </property>
  </class>
  <class>
    <name>com.uwebview.filechooserparams</name>
    <shortname>FileChooserParams</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAcceptTypes" HideFromIDE="true">_getaccepttypes</name>
      <comment>Returns an array of acceptable MIME types.
</comment>
      <returntype>String[]</returntype>
    </method>
    <method>
      <name DesignerName="getFilenameHint" HideFromIDE="true">_getfilenamehint</name>
      <comment>The file name of a default selection if specified, or null.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getIntent" HideFromIDE="true">_getintent</name>
      <comment>Creates an intent that would start a file picker for file selection.
</comment>
      <returntype>anywheresoftware.b4a.objects.IntentWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getIsCaptureEnabled" HideFromIDE="true">_getiscaptureenabled</name>
      <comment>Returns preference for a live media captured value (e.g. Camera, Microphone).
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getMode" HideFromIDE="true">_getmode</name>
      <comment>Returns file chooser mode.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getModeAsString" HideFromIDE="true">_getmodeasstring</name>
      <comment>Returns string value for file chooser mode.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTitle" HideFromIDE="true">_gettitle</name>
      <comment>Returns the title to use for this file selector.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>JavaFileChooserParams</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ParseResult">_parseresult</name>
      <comment>Parse the result returned by the file picker activity.
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>ResultCode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Data</name>
        <type>anywheresoftware.b4a.objects.IntentWrapper</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="AcceptTypes">_accepttypes</name>
      <comment>Returns an array of acceptable MIME types.
</comment>
      <returntype>String[]</returntype>
    </property>
    <property>
      <name DesignerName="FilenameHint">_filenamehint</name>
      <comment>The file name of a default selection if specified, or null.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Intent">_intent</name>
      <comment>Creates an intent that would start a file picker for file selection.
</comment>
      <returntype>anywheresoftware.b4a.objects.IntentWrapper</returntype>
    </property>
    <property>
      <name DesignerName="IsCaptureEnabled">_iscaptureenabled</name>
      <comment>Returns preference for a live media captured value (e.g. Camera, Microphone).
</comment>
      <returntype>boolean</returntype>
    </property>
    <property>
      <name DesignerName="Mode">_mode</name>
      <comment>Returns file chooser mode.
</comment>
      <returntype>int</returntype>
    </property>
    <property>
      <name DesignerName="ModeAsString">_modeasstring</name>
      <comment>Returns string value for file chooser mode.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Title">_title</name>
      <comment>Returns the title to use for this file selector.
</comment>
      <returntype>String</returntype>
    </property>
  </class>
  <class>
    <name>com.uwebview.httpauthhandler</name>
    <shortname>HttpAuthHandler</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Cancel">_cancel</name>
      <comment>Instructs the WebView to cancel the authentication request.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>JavaHttpAuthHandler</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Proceed">_proceed</name>
      <comment>Instructs the WebView to proceed with the authentication with the given credentials.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Username</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Password</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="toObject">_toobject</name>
      <comment>Returns Object as android.webkit.HttpAuthHandler which can be used in Java Code.
</comment>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="UseHttpAuthUsernamePassword">_usehttpauthusernamepassword</name>
      <comment>Gets whether the credentials stored for the current host
</comment>
      <returntype>boolean</returntype>
    </method>
  </class>
  <class>
    <name>com.uwebview.jsresult</name>
    <shortname>JsResult</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Cancel">_cancel</name>
      <comment>Handle the result if the user cancelled the dialog.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Confirm">_confirm</name>
      <comment>Handle a confirmation response from the user.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>JavaJsResult</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="toObject">_toobject</name>
      <comment>Returns Object as android.webkit.JsResult which can be used in Java Code.
</comment>
      <returntype>Object</returntype>
    </method>
  </class>
  <class>
    <name>com.uwebview.safebrowsingresponse</name>
    <shortname>SafeBrowsingResponse</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="BackToSafety">_backtosafety</name>
      <comment>Act as if the user clicked the "back to safety" button.
ParamBoolean As Boolean: true to enable Safe Browsing reporting.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ParamBoolean</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. ObjectFromJava As android.webkit.SafeBrowsingResponse. Object should not be user initialized.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>ObjectFromJava</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Proceed">_proceed</name>
      <comment>Act as if the user clicked the "visit this unsafe site" button.
ParamBoolean As Boolean: true to enable Safe Browsing reporting.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ParamBoolean</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ShowInterstitial">_showinterstitial</name>
      <comment>Display the default interstitial.
ParamBoolean As Boolean: true if the interstitial should show a reporting checkbox.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ParamBoolean</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ToObject">_toobject</name>
      <comment>Returns Object as android.webkit.SafeBrowsingResponse which can be used in Java Code.
</comment>
      <returntype>Object</returntype>
    </method>
    <field>
      <name DesignerName="ThreatType">_threattype</name>
      <returntype>int</returntype>
    </field>
    <field>
      <name DesignerName="ThreatTypeString">_threattypestring</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>com.uwebview.webresourceerror</name>
    <shortname>WebResourceError</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDescription" HideFromIDE="true">_getdescription</name>
      <comment>Gets the string describing the error.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getErrorCode" HideFromIDE="true">_geterrorcode</name>
      <comment>Gets the error code of the error.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>JavaWebResourceError</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="toObject">_toobject</name>
      <comment>Returns Object as android.webkit.WebResourceError which can be used in Java Code.
</comment>
      <returntype>Object</returntype>
    </method>
    <property>
      <name DesignerName="Description">_description</name>
      <comment>Gets the string describing the error.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ErrorCode">_errorcode</name>
      <comment>Gets the error code of the error.
</comment>
      <returntype>int</returntype>
    </property>
  </class>
  <class>
    <name>com.uwebview.webresourceresponse</name>
    <shortname>WebResourceResponse</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Create">_create</name>
      <comment>Constructs a resource response with the given MIME type, character encoding, and input stream.
MimeType As String - the resource response's MIME type, for example "text/html".
Encoding As String - the resource response's character encoding, for example "utf-8".
Data As InputStream - the input stream that provides the resource response's data.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Encoding</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Data</name>
        <type>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Create2">_create2</name>
      <comment>Constructs a resource response with the given parameters.
MimeType As String - the resource response's MIME type, for example "text/html".
Encoding As String - the resource response's character encoding, for example "utf-8".
StatusCode As Int - the status code needs to be in the ranges [100, 299], [400, 599]. Causing a redirect by specifying a 3xx code is not supported.
ReasonPhrase As String - the phrase describing the status code, for example "OK". Must be non-empty. This value cannot be null.
ResponseHeaders As Map - the resource response's headers represented as a mapping of header name -&gt; header value.
Data As InputStream - the input stream that provides the resource response's data.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Encoding</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>StatusCode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ReasonPhrase</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>ResponseHeaders</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
      <parameter>
        <name>Data</name>
        <type>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Create3">_create3</name>
      <comment>Constructs a resource from android.webkit.WebResourceResponse generated in Java Code.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>JavaWebResourceResponse</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getData" HideFromIDE="true">_getdata</name>
      <returntype>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</returntype>
    </method>
    <method>
      <name DesignerName="getEncoding" HideFromIDE="true">_getencoding</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMimeType" HideFromIDE="true">_getmimetype</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getReasonPhrase" HideFromIDE="true">_getreasonphrase</name>
      <comment>Gets the description of the resource response's status code.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getResponseHeaders" HideFromIDE="true">_getresponseheaders</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getStatusCode" HideFromIDE="true">_getstatuscode</name>
      <comment>Gets the resource response's status code.
</comment>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the object. Empty WebResourceResponse is created.
Use Create methods to create with parameters.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setData" HideFromIDE="true">_setdata</name>
      <comment>Gets or sets the input stream that provides the resource response's data.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>InStream</name>
        <type>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEncoding" HideFromIDE="true">_setencoding</name>
      <comment>Gets or sets the resource response's encoding.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Encoding</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMimeType" HideFromIDE="true">_setmimetype</name>
      <comment>Gets or sets the resource response's MIME type.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MimeType</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setResponseHeaders" HideFromIDE="true">_setresponseheaders</name>
      <comment>Gets or sets the headers for the resource response.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ResponseHeaders</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="StatusCodeAndReasonPhrase">_statuscodeandreasonphrase</name>
      <comment>Sets the resource response's status code and reason phrase.
StatusCode As Int - the status code needs to be in the ranges [100, 299], [400, 599]. Causing a redirect by specifying a 3xx code is not supported.
ReasonPharse As String - the phrase describing the status code, for example "OK". Must be non-empty. This value cannot be Null.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>StatusCode</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>ReasonPharse</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="toObject">_toobject</name>
      <comment>Returns Object as android.webkit.WebResourceResponse which can be used in Java Code.
</comment>
      <returntype>Object</returntype>
    </method>
    <property>
      <name DesignerName="Data">_data</name>
      <comment>Gets or sets the input stream that provides the resource response's data.
</comment>
      <returntype>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Encoding">_encoding</name>
      <comment>Gets or sets the resource response's encoding.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MimeType">_mimetype</name>
      <comment>Gets or sets the resource response's MIME type.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ReasonPhrase">_reasonphrase</name>
      <comment>Gets the description of the resource response's status code.
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ResponseHeaders">_responseheaders</name>
      <comment>Gets or sets the headers for the resource response.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="StatusCode">_statuscode</name>
      <comment>Gets the resource response's status code.
</comment>
      <returntype>int</returntype>
    </property>
  </class>
  <version>1.6</version>
  <author>Ivica Golubovic</author>
</root>